#include "stdint.h"
#include "C:/Keil/EE319Kware/inc/tm4c123gh6pm.h"
void SystemInit(){}
	
void delay_ms(int n)
{
	int i,j;
	for(i=0;i<n;i++)
	for(j=0;j<3180;j++)
	{}
}
	
void delay_us(int n)
{
	int i,j;
	for(i=0;i<n;i++)
	for(j=0;j<3;j++)
	{}
}

void LCD_command(unsigned char com)
{
	GPIO_PORTB_DATA_R = 0;        //Rs=0 send command, Rw=0 write, E=0 initially enable=0 
	GPIO_PORTA_DATA_R = com;      // send command to the screen
	GPIO_PORTB_DATA_R |= 0x08;   // E=1 (low to high) without affecting other pins 
	
	// delay needed
	GPIO_PORTB_DATA_R=0;        // E=0 agian
}	
	
void LCD_DATA(unsigned char data)
{
  GPIO_PORTB_DATA_R=0x20;        //Rs=1 send data, Rw=0 write,E=0 initially enable=0  
	GPIO_PORTA_DATA_R=data;        // send data to the screen
	GPIO_PORTB_DATA_R |=0x08;      // E=1 (low to high) without affecting other pins 
	// delay needed
	GPIO_PORTB_DATA_R=0;           //Rs=0 Rw=0 E=0(back to the beginning)
}

void init()
{
	uint32_t delay;
	GPIO_PORTA_LOCK_R=0x4C4F434B;   //lock for ports A B D
	GPIO_PORTA_CR_R=0xFC;
	GPIO_PORTB_LOCK_R=0x4C4F434B;
	GPIO_PORTB_CR_R=0xE0;
	GPIO_PORTD_LOCK_R=0x4C4F434B;
	GPIO_PORTD_CR_R=0xC0;
	
	SYSCTL_RCGCGPIO_R |=0x0B;    //clock register for ports A B
	delay=1;
	
	GPIO_PORTA_AFSEL_R=0;       //initializing portA 2 3 4 5 6 7
	GPIO_PORTA_PCTL_R=0;
	GPIO_PORTA_AMSEL_R=0;
	GPIO_PORTA_DIR_R=0xFC;
	GPIO_PORTA_DEN_R=0xFC;
	GPIO_PORTA_PUR_R=0;
	GPIO_PORTB_AFSEL_R=0;       //initializing portB pins 5 6 7 for LCD
	GPIO_PORTB_PCTL_R=0;
	GPIO_PORTB_AMSEL_R=0;
	GPIO_PORTB_DIR_R=0xE0;
	GPIO_PORTB_DEN_R=0xE0;
	GPIO_PORTB_PUR_R=0;
	GPIO_PORTD_AFSEL_R=0;       //initializing portD 6 7
	GPIO_PORTD_PCTL_R=0;
	GPIO_PORTD_AMSEL_R=0;
	GPIO_PORTD_DIR_R=0xC0;
	GPIO_PORTD_DEN_R=0xC0;
	GPIO_PORTD_PUR_R=0;
	
	 delay_ms(20);
	LCD_command(0x30);          //wakeup
	LCD_command(0x38);          //8 bits D0 to D7
	LCD_command(0x0C);          //Display ON Cursor OFF
	LCD_command(0x06);          //increment cursor
	LCD_command(0x01);          //clear the screen
	LCD_command(0x0F);          //display on
	
	// delays needed after each command
}


int main()
{
	init();
	
	while(1)
	{
		LCD_command(0x01);          //clear the screen 
		LCD_command(0x80);          //force cursor to beginning of 1st line
		delay_ms(500);
		LCD_DATA('A');
		delay_ms(500);
		
	}
}
