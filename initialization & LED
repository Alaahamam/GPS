void init()
{
	uint32_t delay;
	
		SYSCTL_RCGCGPIO_R |=0x03;    //clock register for ports A B
	  delay=1;
	
	GPIO_PORTA_LOCK_R=0x4C4F434B;   //lock for ports A B 
	GPIO_PORTA_CR_R=0xE0;
	//GPIO_PORTB_LOCK_R=0x4C4F434B;
	GPIO_PORTB_CR_R=0xFF;
	

	GPIO_PORTA_AFSEL_R=0;       //initializing portA  5 6 7
	GPIO_PORTA_PCTL_R=0;
	GPIO_PORTA_AMSEL_R=0;
	GPIO_PORTA_DIR_R|=0xE0;
	GPIO_PORTA_DEN_R|=0xE0;
	GPIO_PORTA_PUR_R=0;
	GPIO_PORTB_AFSEL_R=0;       //initializing portB pins 0-8 for LCD
	GPIO_PORTB_PCTL_R=0;
	GPIO_PORTB_AMSEL_R=0;
	GPIO_PORTB_DIR_R=0xFF;
	GPIO_PORTB_DEN_R=0xFF;
	GPIO_PORTB_PUR_R=0;	
	
	
  delay_milisecond(20);
	LCD_com(0x38);          
	delay_microsecond(50);
	LCD_com(0x0F); 
  delay_milisecond(50);	
	LCD_com(0x06); 
	delay_milisecond(50);
  LCD_com(0x01);  
  delay_milisecond(5);
  delay_milisecond(20);	


	SYSCTL_RCGCGPIO_R |=0x20;    // enable the clock of port
	delay=1;
	GPIO_PORTF_LOCK_R=0x4C4F434B;
	GPIO_PORTF_CR_R=0x1F;        // enable pins 
  GPIO_PORTF_DIR_R=0x0E;      // pin I/O  0/1
	GPIO_PORTF_DEN_R=0x1F;      // D	
	GPIO_PORTF_AMSEL_R =0;	    // A
	GPIO_PORTF_AFSEL_R =0;
  GPIO_PORTF_PCTL_R =0;       // working I/O ports OR UART
	GPIO_PORTF_PUR_R=0x11;      // for switches
}
void LCD_char(unsigned char data)
{
    GPIO_PORTA_DATA_R=0x80;        //Rs=1 send data, Rw=0 write,E=0 initially enable=0
    delay_ms(1);
    GPIO_PORTA_DATA_R |=0x40;      // E=1 (low to high) without affecting other pins
    delay_ms(1);
    GPIO_PORTB_DATA_R=data;        // send data to the screen
    delay_us(1);
    GPIO_PORTA_DATA_R=0;           //Rs=0 Rw=0 E=0(back to the beginning)
    delay_us(50);
}
void LCD_separating_double(double deci)
{
    int integer_part=deci;
    int decimal_part=(deci - integer_part)*100000;

    LCD_integers(integer_part);
    LCD_char('.');
    LCD_integers(decimal_part);
}
